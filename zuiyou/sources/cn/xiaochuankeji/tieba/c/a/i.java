package cn.xiaochuankeji.tieba.c.a;

import android.opengl.GLES20;

public class i extends j {
    public i() {
        super("#ifdef GL_ES\nprecision highp float;\n#endif\nvarying vec2 vTextureCoord;\nuniform sampler2D sTexture;\nuniform float width;\nuniform float height;\nvoid main(void) {\n    vec3 offset = vec3(0.0625, 0.5, 0.5);\n    vec3 ycoeff = vec3(0.256816, 0.504154, 0.0979137);\n    vec3 ucoeff = vec3(-0.148246, -0.29102, 0.439266);\n    vec3 vcoeff = vec3(0.439271, -0.367833, -0.071438);\n    vec2 nowTxtPos = vTextureCoord;\n    vec2 size = vec2(width, height);\n    float uvlines = 0.0625*height;\n    float uvlinesI = float(int(uvlines));\n    vec2 uvPosOffset = vec2(uvlines-uvlinesI,uvlinesI/height);\n    vec2 uMaxPos = uvPosOffset+vec2(0,0.25);\n    vec2 vMaxPos = uvPosOffset+uMaxPos;\n    vec2 yScale = vec2(4,4);\n    vec2 uvScale = vec2(8,8);\n    if(nowTxtPos.y<0.25)\n    {\n        vec2 basePos = nowTxtPos * yScale * size;\n        float addY = float(int((basePos.x / width)));\n        basePos.x -= addY * width;\n        basePos.y += addY;\n        float y1,y2,y3,y4;\n        vec2 samplingPos = basePos / size;\n        vec4 texel = texture2D(sTexture, samplingPos);\n        y1 = dot(texel.rgb, ycoeff);\n        y1 += offset.x;\n        basePos.x+=1.0;\n        samplingPos = basePos/size;\n        texel = texture2D(sTexture, samplingPos);\n        y2 = dot(texel.rgb, ycoeff);\n        y2 += offset.x;\n        basePos.x+=1.0;\n        samplingPos = basePos/size;\n        texel = texture2D(sTexture, samplingPos);\n        y3 = dot(texel.rgb, ycoeff);\n        y3 += offset.x;\n        basePos.x+=1.0;\n        samplingPos = basePos/size;\n        texel = texture2D(sTexture, samplingPos);\n        y4 = dot(texel.rgb, ycoeff);\n        y4 += offset.x;\n        gl_FragColor = vec4(y1, y2, y3, y4);\n    } else if(nowTxtPos.y<uMaxPos.y || (nowTxtPos.y == uMaxPos.y && nowTxtPos.x<uMaxPos.x))\n    {\n        nowTxtPos.y -= 0.25;\n        vec2 basePos = nowTxtPos * uvScale * size;\n        float addY = float(int(basePos.x / width));\n        basePos.x -= addY * width;\n        basePos.y += addY;\n        basePos.y *= 2.0;\n        basePos -= clamp(uvScale * 0.5 - 2.0, vec2(0.0), uvScale);\n        basePos.y -= 2.0;\n        vec4 sample = texture2D(sTexture, basePos/ size).rgba;\n        float u1 = dot(sample.rgb, ucoeff);\n        u1 += offset.y;\n        basePos.x+=2.0;\n        sample = texture2D(sTexture, basePos/ size).rgba;\n        float u2 = dot(sample.rgb, ucoeff);\n        u2 += offset.y;\n        basePos.x+=2.0;\n        sample = texture2D(sTexture, basePos / size).rgba;\n        float u3 = dot(sample.rgb, ucoeff);\n        u3 += offset.y;\n        basePos.x+=2.0;\n        sample = texture2D(sTexture, basePos / size).rgba;\n        float u4 = dot(sample.rgb, ucoeff);\n        u4 += offset.y;\n        gl_FragColor = vec4(u1, u2, u3, u4);\n    } else if(nowTxtPos.y<vMaxPos.y || (nowTxtPos.y == vMaxPos.y && nowTxtPos.x<vMaxPos.x))\n    {\n        nowTxtPos -= uMaxPos;\n        vec2 basePos = nowTxtPos * uvScale * size;\n        float addY = float(int(basePos.x / width));\n        basePos.x -= addY * width;\n        basePos.y += addY;\n        basePos.y *= 2.0;\n        basePos -= clamp(uvScale * 0.5 - 2.0, vec2(0.0), uvScale);\n        basePos.y -= 2.0;\n        vec4 sample = texture2D(sTexture, basePos / size).rgba;\n        float v1 = dot(sample.rgb, vcoeff);\n        v1 += offset.z;\n        basePos.x+=2.0;\n        sample = texture2D(sTexture, basePos / size).rgba;\n        float v2 = dot(sample.rgb, vcoeff);\n        v2 += offset.z;\n        basePos.x+=2.0;\n        sample = texture2D(sTexture, basePos / size).rgba;\n        float v3 = dot(sample.rgb, vcoeff);\n        v3 += offset.z;\n        basePos.x+=2.0;\n        sample = texture2D(sTexture, basePos / size).rgba;\n        float v4 = dot(sample.rgb, vcoeff);\n        v4 += offset.z;\n        gl_FragColor = vec4(v1, v2, v3, v4);\n    }\n}");
    }

    protected void b(int i, int i2) {
        super.b(i, i2);
        int glGetUniformLocation = GLES20.glGetUniformLocation(f(), "width");
        int glGetUniformLocation2 = GLES20.glGetUniformLocation(f(), "height");
        a(glGetUniformLocation, (float) i);
        a(glGetUniformLocation2, (float) i2);
    }
}
